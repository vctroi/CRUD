{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension'; // import {\n//   userLoginReducer,\n//   userRegisterReducer,\n//   userDetailsReducer,\n//   userUpdateProfileReducer,\n//   userListReducer,\n//   userDeleteReducer,\n//   userUpdateReducer,\n// } from './reducers/userReducers'\n\nconst reducer = combineReducers({\n  pessoas: pessoasReducer // userLogin: userLoginReducer,\n  //   userRegister: userRegisterReducer,\n  //   userUpdateProfile: userUpdateProfileReducer,\n  //   userDelete: userDeleteReducer,\n  //   userUpdate: userUpdateReducer,\n\n}); // const userInfoFromStorage = localStorage.getItem('userInfo')\n//   ? JSON.parse(localStorage.getItem('userInfo'))\n//   : null\n\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  } // userLogin: { userInfo: userInfoFromStorage },\n\n}; // const middleware = [thunk]\n\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/home/linux/√Årea de Trabalho/CRUD/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","reducer","pessoas","pessoasReducer","initialState","userLogin","userInfo","userInfoFromStorage","store","middleware"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,OAAO,GAAGJ,eAAe,CAAC;AAC9BK,EAAAA,OAAO,EAAEC,cADqB,CAE9B;AACA;AACA;AACA;AACA;;AAN8B,CAAD,CAA/B,C,CASA;AACA;AACA;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE;AAAEC,IAAAA,QAAQ,EAAEC;AAAZ,GADQ,CAEnB;;AAFmB,CAArB,C,CAKA;;AAEA,MAAMC,KAAK,GAAGZ,WAAW,CACvBK,OADuB,EAEvBG,YAFuB,EAGvBJ,mBAAmB,CAACF,eAAe,CAAC,GAAGW,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeD,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n// import {\n//   userLoginReducer,\n//   userRegisterReducer,\n//   userDetailsReducer,\n//   userUpdateProfileReducer,\n//   userListReducer,\n//   userDeleteReducer,\n//   userUpdateReducer,\n// } from './reducers/userReducers'\n\nconst reducer = combineReducers({\n  pessoas: pessoasReducer\n  // userLogin: userLoginReducer,\n  //   userRegister: userRegisterReducer,\n  //   userUpdateProfile: userUpdateProfileReducer,\n  //   userDelete: userDeleteReducer,\n  //   userUpdate: userUpdateReducer,\n})\n\n// const userInfoFromStorage = localStorage.getItem('userInfo')\n//   ? JSON.parse(localStorage.getItem('userInfo'))\n//   : null\n\nconst initialState = {\n  userLogin: { userInfo: userInfoFromStorage },\n  // userLogin: { userInfo: userInfoFromStorage },\n}\n\n// const middleware = [thunk]\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store\n"]},"metadata":{},"sourceType":"module"}