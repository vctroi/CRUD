{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { pessoasReducer //   userLoginReducer,\n//   userRegisterReducer,\n//   userDetailsReducer,\n//   userUpdateProfileReducer,\n//   userListReducer,\n//   userDeleteReducer,\n//   userUpdateReducer,\n} from './reducers/userReducers';\nconst reducer = combineReducers({\n  pessoas: pessoasReducer // userLogin: userLoginReducer,\n  //   userRegister: userRegisterReducer,\n  //   userUpdateProfile: userUpdateProfileReducer,\n  //   userDelete: userDeleteReducer,\n  //   userUpdate: userUpdateReducer,\n\n}); // const userInfoFromStorage = localStorage.getItem('userInfo')\n//   ? JSON.parse(localStorage.getItem('userInfo'))\n//   : null\n\nconst initialState = {\n  pessoas: {\n    pessoaInfo: \"\"\n  } // pessoas: { pessoaInfo: pessoaInfoFromStorage },\n  // userLogin: { userInfo: userInfoFromStorage },\n\n}; // const middleware = [thunk]\n\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/home/linux/√Årea de Trabalho/CRUD/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","pessoasReducer","reducer","pessoas","initialState","pessoaInfo","store","middleware"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACEC,cADF,CAEE;AACA;AACA;AACA;AACA;AACA;AACA;AARF,OASO,yBATP;AAWA,MAAMC,OAAO,GAAGL,eAAe,CAAC;AAC9BM,EAAAA,OAAO,EAAEF,cADqB,CAE9B;AACA;AACA;AACA;AACA;;AAN8B,CAAD,CAA/B,C,CASA;AACA;AACA;;AAEA,MAAMG,YAAY,GAAG;AACnBD,EAAAA,OAAO,EAAE;AAAEE,IAAAA,UAAU,EAAE;AAAd,GADU,CAEnB;AACA;;AAHmB,CAArB,C,CAMA;;AAEA,MAAMC,KAAK,GAAGV,WAAW,CACvBM,OADuB,EAEvBE,YAFuB,EAGvBJ,mBAAmB,CAACF,eAAe,CAAC,GAAGS,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeD,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n  pessoasReducer,\n  //   userLoginReducer,\n  //   userRegisterReducer,\n  //   userDetailsReducer,\n  //   userUpdateProfileReducer,\n  //   userListReducer,\n  //   userDeleteReducer,\n  //   userUpdateReducer,\n} from './reducers/userReducers'\n\nconst reducer = combineReducers({\n  pessoas: pessoasReducer\n  // userLogin: userLoginReducer,\n  //   userRegister: userRegisterReducer,\n  //   userUpdateProfile: userUpdateProfileReducer,\n  //   userDelete: userDeleteReducer,\n  //   userUpdate: userUpdateReducer,\n})\n\n// const userInfoFromStorage = localStorage.getItem('userInfo')\n//   ? JSON.parse(localStorage.getItem('userInfo'))\n//   : null\n\nconst initialState = {\n  pessoas: { pessoaInfo: \"\" },\n  // pessoas: { pessoaInfo: pessoaInfoFromStorage },\n  // userLogin: { userInfo: userInfoFromStorage },\n}\n\n// const middleware = [thunk]\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store\n"]},"metadata":{},"sourceType":"module"}