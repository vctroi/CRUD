{"ast":null,"code":"import axios from 'axios';\nimport { USER_CAD_FAIL, USER_CAD_REQUEST, USER_CAD_SUCCESS } from '../constants/userConstants';\nexport const info = (nome, rg, cpf, dataNascimento, dataAdmissao, funcao) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_CAD_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n      }\n    }; // console.log(nome);\n\n    const {\n      data\n    } = await axios.post('http://127.0.0.1:5000/api/create', {\n      nome,\n      rg,\n      cpf,\n      dataNascimento,\n      dataAdmissao,\n      funcao\n    }, config);\n    dispatch({\n      type: USER_CAD_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_CAD_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const edit = editarNome => async dispatch => {\n  // rg, cpf, dataNascimento, dataAdmissao, funcao\n  try {\n    dispatch({\n      type: USER_CAD_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n      }\n    }; // console.log(nome);\n\n    const {\n      data\n    } = await axios.post('http://127.0.0.1:5000/api/edit', {\n      editarNome // rg,\n      // cpf,\n      // dataNascimento,\n      // dataAdmissao,\n      // funcao\n\n    }, config);\n    dispatch({\n      type: USER_CAD_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_CAD_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; //readPeassoa\n// export const getUserDetails = (id) => async (dispatch, getState) => {\n//   try {\n//     dispatch({\n//       type: USER_DETAILS_REQUEST,\n//     })\n//     const {\n//       userCAD: { userInfo },\n//     } = getState()\n//     const config = {\n//       headers: {\n//         Authorization: `Bearer ${userInfo.token}`,\n//       },\n//     }\n//     const { data } = await axios.get(`/api/users/${id}`, config)\n//     dispatch({\n//       type: USER_DETAILS_SUCCESS,\n//       payload: data,\n//     })\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message\n//     if (message === 'Not authorized, token failed') {\n//       dispatch(logout())\n//     }\n//     dispatch({\n//       type: USER_DETAILS_FAIL,\n//       payload: message,\n//     })\n//   }\n// }\n//updatePessoa\n// export const updateUserProfile = (user) => async (dispatch, getState) => {\n//   try {\n//     dispatch({\n//       type: USER_UPDATE_PROFILE_REQUEST,\n//     })\n//     const {\n//       userLogin: { userInfo },\n//     } = getState()\n//     const config = {\n//       headers: {\n//         'Content-Type': 'application/json',\n//         Authorization: `Bearer ${userInfo.token}`,\n//       },\n//     }\n//     const { data } = await axios.put(`/api/users/profile`, user, config)\n//     dispatch({\n//       type: USER_UPDATE_PROFILE_SUCCESS,\n//       payload: data,\n//     })\n//     dispatch({\n//       type: USER_LOGIN_SUCCESS,\n//       payload: data,\n//     })\n//     localStorage.setItem('userInfo', JSON.stringify(data))\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message\n//     if (message === 'Not authorized, token failed') {\n//       dispatch(logout())\n//     }\n//     dispatch({\n//       type: USER_UPDATE_PROFILE_FAIL,\n//       payload: message,\n//     })\n//   }\n// }\n// export const updateUser = (user) => async (dispatch, getState) => {\n//   try {\n//     dispatch({\n//       type: USER_UPDATE_REQUEST,\n//     })\n//     const {\n//       userLogin: { userInfo },\n//     } = getState()\n//     const config = {\n//       headers: {\n//         'Content-Type': 'application/json',\n//         Authorization: `Bearer ${userInfo.token}`,\n//       },\n//     }\n//     const { data } = await axios.put(`/api/users/${user._id}`, user, config)\n//     dispatch({ type: USER_UPDATE_SUCCESS })\n//     dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\n//     dispatch({ type: USER_DETAILS_RESET })\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message\n//     if (message === 'Not authorized, token failed') {\n//       dispatch(logout())\n//     }\n//     dispatch({\n//       type: USER_UPDATE_FAIL,\n//       payload: message,\n//     })\n//   }\n// }","map":{"version":3,"sources":["/home/linux/Área de Trabalho/CRUD/frontend/src/actions/userActions.js"],"names":["axios","USER_CAD_FAIL","USER_CAD_REQUEST","USER_CAD_SUCCESS","info","nome","rg","cpf","dataNascimento","dataAdmissao","funcao","dispatch","type","config","headers","data","post","payload","error","response","message","edit","editarNome"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAEEC,aAFF,EAGEC,gBAHF,EAIEC,gBAJF,QAMO,4BANP;AAQA,OAAO,MAAMC,IAAI,GAAG,CAACC,IAAD,EAAOC,EAAP,EAAWC,GAAX,EAAgBC,cAAhB,EAAgCC,YAAhC,EAA8CC,MAA9C,KAAyD,MAAOC,QAAP,IAAoB;AAC/F,MAAI;AACFA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEV;AADC,KAAD,CAAR;AAIA,UAAMW,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,uCAA+B;AAFxB;AADI,KAAf,CALE,CAWF;;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMf,KAAK,CAACgB,IAAN,CACrB,kCADqB,EAErB;AACEX,MAAAA,IADF;AAEEC,MAAAA,EAFF;AAGEC,MAAAA,GAHF;AAIEC,MAAAA,cAJF;AAKEC,MAAAA,YALF;AAMEC,MAAAA;AANF,KAFqB,EAUrBG,MAVqB,CAAvB;AAaAF,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAET,gBADC;AAEPc,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAKD,GA9BD,CA8BE,OAAOG,KAAP,EAAc;AACdP,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEX,aADC;AAEPgB,MAAAA,OAAO,EACLC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CAxCM;AA0CP,OAAO,MAAMC,IAAI,GAAIC,UAAD,IAAiB,MAAOX,QAAP,IAAoB;AACvD;AACA,MAAI;AACFA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEV;AADC,KAAD,CAAR;AAIA,UAAMW,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,uCAA+B;AAFxB;AADI,KAAf,CALE,CAWF;;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMf,KAAK,CAACgB,IAAN,CACrB,gCADqB,EAErB;AACEM,MAAAA,UADF,CAEE;AACA;AACA;AACA;AACA;;AANF,KAFqB,EAUrBT,MAVqB,CAAvB;AAaAF,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAET,gBADC;AAEPc,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAKD,GA9BD,CA8BE,OAAOG,KAAP,EAAc;AACdP,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEX,aADC;AAEPgB,MAAAA,OAAO,EACLC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CAzCM,C,CA4CP;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from 'axios'\nimport {\n\n  USER_CAD_FAIL,\n  USER_CAD_REQUEST,\n  USER_CAD_SUCCESS,\n\n} from '../constants/userConstants'\n\nexport const info = (nome, rg, cpf, dataNascimento, dataAdmissao, funcao) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_CAD_REQUEST,\n    })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n      },\n    }\n    // console.log(nome);\n    const { data } = await axios.post(\n      'http://127.0.0.1:5000/api/create',\n      {\n        nome,\n        rg,\n        cpf,\n        dataNascimento,\n        dataAdmissao,\n        funcao\n      },\n      config\n    )\n\n    dispatch({\n      type: USER_CAD_SUCCESS,\n      payload: data,\n    })\n\n  } catch (error) {\n    dispatch({\n      type: USER_CAD_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const edit = (editarNome,) => async (dispatch) => {\n  // rg, cpf, dataNascimento, dataAdmissao, funcao\n  try {\n    dispatch({\n      type: USER_CAD_REQUEST,\n    })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n      },\n    }\n    // console.log(nome);\n    const { data } = await axios.post(\n      'http://127.0.0.1:5000/api/edit',\n      {\n        editarNome,\n        // rg,\n        // cpf,\n        // dataNascimento,\n        // dataAdmissao,\n        // funcao\n      },\n      config\n    )\n\n    dispatch({\n      type: USER_CAD_SUCCESS,\n      payload: data,\n    })\n\n  } catch (error) {\n    dispatch({\n      type: USER_CAD_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n\n//readPeassoa\n// export const getUserDetails = (id) => async (dispatch, getState) => {\n//   try {\n//     dispatch({\n//       type: USER_DETAILS_REQUEST,\n//     })\n\n//     const {\n//       userCAD: { userInfo },\n//     } = getState()\n\n//     const config = {\n//       headers: {\n//         Authorization: `Bearer ${userInfo.token}`,\n//       },\n//     }\n\n//     const { data } = await axios.get(`/api/users/${id}`, config)\n\n//     dispatch({\n//       type: USER_DETAILS_SUCCESS,\n//       payload: data,\n//     })\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message\n//     if (message === 'Not authorized, token failed') {\n//       dispatch(logout())\n//     }\n//     dispatch({\n//       type: USER_DETAILS_FAIL,\n//       payload: message,\n//     })\n//   }\n// }\n//updatePessoa\n// export const updateUserProfile = (user) => async (dispatch, getState) => {\n//   try {\n//     dispatch({\n//       type: USER_UPDATE_PROFILE_REQUEST,\n//     })\n\n//     const {\n//       userLogin: { userInfo },\n//     } = getState()\n\n//     const config = {\n//       headers: {\n//         'Content-Type': 'application/json',\n//         Authorization: `Bearer ${userInfo.token}`,\n//       },\n//     }\n\n//     const { data } = await axios.put(`/api/users/profile`, user, config)\n\n//     dispatch({\n//       type: USER_UPDATE_PROFILE_SUCCESS,\n//       payload: data,\n//     })\n//     dispatch({\n//       type: USER_LOGIN_SUCCESS,\n//       payload: data,\n//     })\n//     localStorage.setItem('userInfo', JSON.stringify(data))\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message\n//     if (message === 'Not authorized, token failed') {\n//       dispatch(logout())\n//     }\n//     dispatch({\n//       type: USER_UPDATE_PROFILE_FAIL,\n//       payload: message,\n//     })\n//   }\n// }\n\n\n// export const updateUser = (user) => async (dispatch, getState) => {\n//   try {\n//     dispatch({\n//       type: USER_UPDATE_REQUEST,\n//     })\n\n//     const {\n//       userLogin: { userInfo },\n//     } = getState()\n\n//     const config = {\n//       headers: {\n//         'Content-Type': 'application/json',\n//         Authorization: `Bearer ${userInfo.token}`,\n//       },\n//     }\n\n//     const { data } = await axios.put(`/api/users/${user._id}`, user, config)\n\n//     dispatch({ type: USER_UPDATE_SUCCESS })\n\n//     dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\n\n//     dispatch({ type: USER_DETAILS_RESET })\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message\n//     if (message === 'Not authorized, token failed') {\n//       dispatch(logout())\n//     }\n//     dispatch({\n//       type: USER_UPDATE_FAIL,\n//       payload: message,\n//     })\n//   }\n// }\n\n\n\n"]},"metadata":{},"sourceType":"module"}